#include <unistd.h>

#define max_len 9

int ft_pow(int base, int exponent);
void ft_print_num(int nbr, int start_modulo);
int need_print(int nbr, int start_modulo);

void ft_print_combn(n)
{
    int i;

    if (n < 1 || n > 9) return;

    i = 0;
    while (i <= ft_pow(10, n) - 1)
    {
        if (need_print(i, ft_pow(10, n-1)) == 1) 
        {
            ft_print_num(i, ft_pow(10, n-1));
            write(1, ", ", 2);
        }
        i++;
    }

}

void ft_print_num(int nbr, int start_modulo)
{
	int	modulo;
	int	rest;
	char	newChar;

	modulo = start_modulo;
	rest = nbr;

	while (modulo >= 1)
	{
		newChar = '0' + (rest / modulo);
		write(1, &newChar, 1);
		rest %= modulo;
		modulo /= 10;
	}
}

int need_print(int nbr, int start_modulo)
{
    int tab[max_len];
    int modulo;
    int rest;
    int nbrDigits;

    modulo = start_modulo;
    rest = nbr;
    nbrDigits = 0;

    while (modulo >= 1)
	{
		tab[nbrDigits] = rest / modulo;
		rest %= modulo;
		modulo /= 10;
        if ((nbrDigits > 0) && (tab[nbrDigits] <= tab[nbrDigits - 1])) return 0;
        nbrDigits++;
	}

    return 1;
}

int ft_pow(int base, int exponent) 
{
    int result = 1;
    int i;

    i = 0;
    while (i < exponent) 
    {
        result *= base;
        i++;
    }

    return result;
}